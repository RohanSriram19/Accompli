version: '3.8'

services:
  # Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: accompli
      POSTGRES_USER: accompli
      POSTGRES_PASSWORD: accompli
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U accompli"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # FastAPI main service
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+psycopg://accompli:accompli@db:5432/accompli
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minio
      S3_SECRET_KEY: minio123
    volumes:
      - ./services/api:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Realtime WebSocket service
  realtime:
    build:
      context: ./services/realtime
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      REDIS_URL: redis://redis:6379/0
      DATABASE_URL: postgresql+psycopg://accompli:accompli@db:5432/accompli
    volumes:
      - ./services/realtime:/app
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload

  # Background worker
  worker:
    build:
      context: ./services/worker
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg://accompli:accompli@db:5432/accompli
      REDIS_URL: redis://redis:6379/0
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minio
      S3_SECRET_KEY: minio123
    volumes:
      - ./services/worker:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: celery -A worker.celery_app worker --loglevel=info

  # LLM microservice
  llm:
    build:
      context: ./services/llm
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      REDIS_URL: redis://redis:6379/0
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ./services/llm:/app
    depends_on:
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8002 --reload

  # Next.js web app
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_BASE: http://localhost:8000
      NEXT_PUBLIC_WS_BASE: ws://localhost:8001
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    depends_on:
      - api
      - realtime
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  minio_data:
